{"version":3,"sources":["Components/Contacts/Contacts.module.css","Components/app.module.css","redux/contacts-actions.js","img/sprite.svg","redux/contacts-api.js","redux/contacts-operation.js","redux/contacts-selectors.js","Components/ContactForm/ContactForm.jsx","Components/Contacts/Contacts.jsx","Components/App.jsx","redux/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","setFilter","createAction","axios","defaults","baseURL","addContactApi","contact","post","then","data","catch","err","console","log","fetchContacts","createAsyncThunk","a","get","res","contacts","addContact","addContactRes","deleteContact","id","contactId","delete","getAllContacts","state","enteties","getFilter","filter","AllContacts","Filter","toLowerCase","item","name","includes","isLoading","connect","selectors","useState","setName","number","setNumber","dispatch","useDispatch","className","s","interface","onSubmit","e","preventDefault","obj","dataUser","isValid","length","alert","validate","operations","document","getElementById","value","form","type","onChange","target","pattern","title","required","inputTel","buttonAdd","svg","href","sprite","filtredContacts","loading","useEffect","actions","divLoader","color","height","width","timeout","map","li","onClick","button","App","section","createReducer","fulfilled","_","action","payload","pending","rejected","error","filterReducer","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render"],"mappings":"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","file":"static/js/main.90c2d8c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Contacts_li__3TDAE\",\"button\":\"Contacts_button__U2xks\",\"svg\":\"Contacts_svg__1Ox_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"app_section__2xzdf\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst setFilter = createAction(\"contacts/setFilter\");\r\n\r\nexport default {\r\n  setFilter,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/sprite.3be0bc09.svg\";","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:7070\";\r\nconst BASE_URL = \"http://localhost:7070\";\r\n\r\nexport const getContactsApi = () => {\r\n  return axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => data)\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const addContactApi = (contact) => {\r\n  return axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteContactsApi = (contactId) => {\r\n  return (\r\n    axios\r\n      .delete(`contacts/${contactId}`)\r\n      .then(({ data }) => data)\r\n      // .then(({ data }) => console.log(data))\r\n      .catch((err) => console.log(err))\r\n  );\r\n};\r\n","import actions from \"./contacts-actions\";\r\nimport {\r\n  getContactsApi,\r\n  addContactApi,\r\n  deleteContactsApi,\r\n} from \"./contacts-api\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// export const addContact = (contact) => async (dispatch) => {\r\n//   dispatch(actions.postContactsRequest());\r\n//   try {\r\n//     const addContactRes = await addContactApi(contact);\r\n//     dispatch(actions.postContactsSuccess(addContactRes));\r\n//   } catch {\r\n//     dispatch(actions.postContactsError(error));\r\n//   }\r\n// };\r\n\r\n// export const fetchContacts = () => async (dispatch) => {\r\n//   dispatch(actions.fetchContactsRequest());\r\n//   try {\r\n//     const contacts = await getContactsApi().then((res) => res);\r\n//     dispatch(actions.fetchContactsSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(actions.fetchContactsError(error));\r\n//   }\r\n// };\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    const contacts = await getContactsApi().then((res) => res);\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async (contact) => {\r\n    const addContactRes = await addContactApi(contact);\r\n    return addContactRes;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (id) => {\r\n    const deleteContactRes = await deleteContactsApi(id);\r\n\r\n    return id;\r\n  }\r\n);\r\n","const getAllContacts = (state) => state.contacts.enteties;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getloading = (state) => state.contacts.isLoading;\r\nconst getFiltredContacts = (state) => {\r\n  const AllContacts = getAllContacts(state);\r\n  const Filter = getFilter(state).toLowerCase();\r\n\r\n  const res = AllContacts.filter((item) =>\r\n    item.name.toLowerCase().includes(Filter)\r\n  );\r\n  return res;\r\n};\r\n\r\nexport default {\r\n  getAllContacts,\r\n  getFilter,\r\n  getFiltredContacts,\r\n  getloading,\r\n};\r\n","import React, { useState } from 'react'\r\nimport s from './ContactForm.module.css';\r\nimport { connect } from 'react-redux'\r\nimport actions from 'redux/contacts-actions';\r\nimport sprite from 'img/sprite.svg';\r\nimport * as operations from 'redux/contacts-operation';\r\nimport selectors from 'redux/contacts-selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nfunction ContactForm({ contacts }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const handleChangephnone = e => {\r\n        const value = e.target.value;\r\n        setNumber(value);\r\n\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setName(value);\r\n    }\r\n\r\n    const validate = (dataUser) => {\r\n        const res = contacts.filter(item => (\r\n            item.name === dataUser.name\r\n        ))\r\n\r\n        let isValid = true;\r\n        const notValid = () => {\r\n            isValid = false;\r\n        };\r\n\r\n        res.length > 0 && alert(`Eror, ${dataUser.name} is already in contacts`)\r\n        res.length > 0 && notValid()\r\n        return (isValid);\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const obj = {\r\n            name: name,\r\n            number: number,\r\n            \r\n        }\r\n        \r\n        \r\n\r\n            validate(obj) && dispatch(operations.addContact(obj)) \r\n            \r\n        \r\n            setName('');\r\n            setNumber('');\r\n            document.getElementById('name').value = '';\r\n            document.getElementById('number').value = '';\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={s.interface}>\r\n\r\n            <form onSubmit={handleSubmit} className={s.form}>\r\n                <div>\r\n                    <label>\r\n                        <p>Name</p>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            id=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                        />\r\n                    </label>\r\n\r\n                    <label>\r\n                        Phone\r\n                        <input\r\n                            className={s.inputTel}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            onChange={handleChangephnone}\r\n                            id=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className={s.buttonAdd}>\r\n                    <svg className={s.svg}>\r\n                        <use href={sprite + \"#icon-user-plus\"}></use>\r\n                    </svg>\r\n                </button>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: selectors.getAllContacts(state),\r\n        \r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactForm);\r\n","import s from './Contacts.module.css';\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport actions from 'redux/contacts-actions';\r\nimport * as operations from 'redux/contacts-operation';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport sprite from 'img/sprite.svg';\r\nimport selectors from 'redux/contacts-selectors';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n\r\n\r\nconst Contacts = ({ filtredContacts, loading }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {  \r\n        \r\n        dispatch(operations.fetchContacts())\r\n    }, [dispatch, ])\r\n\r\n\r\n    const filter = e => {\r\n        const value = e.target.value;\r\n        \r\n        dispatch(actions.setFilter(value))\r\n    };\r\n\r\n    const removeContact =  (id) => {\r\n        \r\n        return dispatch(operations.deleteContact(id));\r\n        \r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Contacts</h2>\r\n            <input type=\"text\" onChange={filter} />\r\n                <div className={s.divLoader}>\r\n                {loading && (\r\n                <Loader\r\n                    type=\"Circles\"\r\n                    color=\"#00BFFF\"\r\n                    height={80}\r\n                    width={80}\r\n                    timeout={3000} //3 secs\r\n                    />\r\n                )}\r\n          </div>\r\n            <ul>\r\n                {\r\n                    \r\n                        \r\n                        filtredContacts.map(item => (\r\n                        <li key={item.id} className={s.li}> {item.name}: {item.number} <button type=\"button\" id={item.id} onClick={() => removeContact(item.id)} className={s.button}><svg className={s.svg}>\r\n                        <use href={sprite + \"#icon-user-minus\"}></use>\r\n                    </svg></button> </li>\r\n                    ))\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filtredContacts: selectors.getFiltredContacts(state),\r\n        loading: selectors.getloading(state),\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Contacts);\r\n","import React, { useState, useEffect } from 'react'\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport Contacts from './Contacts/Contacts';\r\nimport s from '../Components/app.module.css';\r\n\r\n\r\nfunction App() {\r\n    \r\n    return (\r\n        <div className={s.section}>\r\n            <h1>PhoneBook</h1>\r\n\r\n            <ContactForm />\r\n            <Contacts />\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contacts-actions\";\r\nimport { combineReducers } from \"redux\";\r\nimport { fetchContacts, addContact, deleteContact } from \"./contacts-operation\";\r\n\r\nconst enteties = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [fetchContacts.pending]: () => null,\r\n\r\n  [addContact.rejected]: (_, action) => action.payload,\r\n  [addContact.pending]: () => null,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.setFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  enteties,\r\n  isLoading: isLoading,\r\n  error: error,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: reducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App /> \n    </Provider>\n    \n    \n    ,\n    document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"interface\":\"ContactForm_interface__1jJZ0\",\"form\":\"ContactForm_form__1sN8W\",\"inputTel\":\"ContactForm_inputTel__3MTqH\",\"buttonAdd\":\"ContactForm_buttonAdd__2x3nU\",\"svg\":\"ContactForm_svg__3LzHx\"};"],"sourceRoot":""}